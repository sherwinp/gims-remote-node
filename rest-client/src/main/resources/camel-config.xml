<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:camel="http://camel.apache.org/schema/spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       ">

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>file:#{systemProperties['user.home']}/variable.properties</value>
			</list>
		</property>
	</bean>
	
	<context:component-scan base-package="gov.fda">
	</context:component-scan>
	

	<bean id="localRepository" class="gov.fda.repository.LocalRepository" />
	
	<bean id="fileProcessor" class="gov.fda.FileProcessor" />
	
	<bean id="slimsGateKeeper" class="gov.fda.SlimsGateKeeper"/>
	
	<camelContext id="theRoute"
		xmlns="http://camel.apache.org/schema/spring">

		<propertyPlaceholder id="heldProperties">
			<propertiesLocation resolver="classpath"
				path="variable.properties" optional="false" />
		</propertyPlaceholder>

		<route id="fileInprogress">
			<from
				uri="file:{{filecollectionPath}}?include=CFSAN.*meta.json$&amp;preMove=.inprogress&amp;move=.done" />
			<log loggingLevel="INFO"
				message="Moving file ${header.CamelFileName} to .inprogress" />
			<to uri="bean:fileProcessor" />
		</route>

		<route>
			<!-- incoming requests from the servlet is routed -->
			<from uri="servlet:///hello" />
			<choice>
				<when>
					<!-- is there a header with the key name? -->
					<header>name</header>
					<!-- yes so return back a message to the user -->
					<transform>
						<simple>Hello ${header.name} how are you?</simple>
					</transform>
					<to uri="stream:out" />
				</when>
				<when>
					<header>taskid</header>
					<to uri="bean:slimsGateKeeper" />
					<to uri="stream:out" />
				</when>
				<otherwise>
					<!-- if no name parameter then output a syntax to the user -->
					<transform>
						<constant>Add a name parameter to uri, eg ?name=foo</constant>
					</transform>
				</otherwise>
			</choice>
		</route>

	</camelContext>
</beans>